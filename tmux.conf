# ---------------------------
# Base Setting
# ---------------------------

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
#set -g base-index 1

# ペインのインデックスを1から始める
#setw -g pane-base-index 1

# 異なるサイズの端末からアクセスした時にリサイズ
setw -g aggressive-resize on

# マウス操作を有効にする
# http://qiita.com/jyotti/items/70a3a8035d767f99f93d
#set-option -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# メッセージの表示時間を延長
set-option -g display-time 2000


# ---------------------------
# Key Bind
# ---------------------------

# prefixキーをC-qに変更する
set -g prefix C-q

# C-bのキーバインドを解除する
unbind C-b

#キーバインドをvi風に
set-window-option -g mode-keys vi

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ホームディレクトリを開かないようにする
# (v1.9からホームディレクトリが開くようになったため, 挙動を元に戻す)
# 新規ウィンドウ
if-shell '[[ "`tmux -V`" !=~ 1\.[678] ]]' 'bind c new-window -c "#{pane_current_path}"'

# ペイン分割時
# | でペインを立てに分割する
if-shell '[[ "`tmux -V`" =~ 1\.[678] ]]' 'bind | split-window -h' 'bind | split-window -h -c "#{pane_current_path}"'
# - でペインを横に分割する
if-shell '[[ "`tmux -V`" =~ 1\.[678] ]]' 'bind - split-window -v' 'bind - split-window -v -c "#{pane_current_path}"'

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# windowの移動
bind C-m command-prompt -p "where move to?" "move-window -t %1"

# windowの位置交換
bind C-s command-prompt -p "swap-window src:","swap-window dst:" "swap-window -s %1 -t %2"

# paneの位置交換
unbind J
bind -r J rotate-window -D
unbind K
bind -r K rotate-window -U
unbind S
bind S command-prompt -p "swap-pane src:","swap-pane dst:" "swap-pane -s %1 -t %2"

# ペインのリサイズ
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5


# ---------------------------
# Color
# ---------------------------

#256色対応
set-option -g default-terminal "xterm-256color"
set-option -g terminal-overrides "term:colors=256"

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg red #colour240 #base01
set-option -g pane-active-border-fg red #colour166 #orange

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green


# ---------------------------
# Status Bar
# ---------------------------

# 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"

# リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60

# ウィンドウリストの位置を中心寄せにする
set -g status-justify centre

## ステータスバーを上部に表示する
#set -g status-position top
